<?php
/**
 * Created by PhpStorm.
 * User: rubik
 * Date: 30/01/2019
 * Time: 13:54
 */

abstract class DatabaseInterface
{
    protected $location;

    /**
     * opens the database at the location $location.
     * if it is a SQL-based database, it have to create the good table
     * @param $name the name of the database (will be generated by addData)
     * @return mixed error code if it failed
     */
    protected abstract function openDatabase($name);

    /**
     * close the database when it have finished to put data in
     * must be called after each openDatabases
     * @return mixed error code if it failed
     */
    protected abstract function closeDataBase();


    /**
     * add all data to the database. It'll open the database, add all data lines
     * to the database
     * @param $fieldsArray array that contains one line per table.
     * each line is an array containing all the field names
     * @param $datasArray array that must match the $fieldsArray shape
     * it must match the corresponding data to the $fieldsArray
     * @return mixed error code (to be defined in the future)
     */
    function addData($fieldsArray, $datasArray)
    {
        if(count($fieldsArray) != count($datasArray))
        {
            return -1; // will be defined as constant
        }
        foreach ($fieldsArray as $index => $fieldArray)
        {
            $dataArray = $datasArray [$index];
            if(count($dataArray) != count($fieldsArray))
                return -2; // will be defined as constant

        }
        foreach ($fieldsArray as $index => $fieldArray)
        {
            $dataArray = $datasArray [$index];
            $this -> openDatabase(join(",", $fieldArray));
            $this -> addDataLine($fieldArray, $dataArray);
            $this -> closeDataBase();

        }
    }

    /**
     * @param $fieldNames
     * @param $dataArray
     * @return mixed
     */
    protected abstract function addDataLine($fieldNames, $dataArray);

    /**
     * @param $fieldNames
     * @return mixed
     */
    protected abstract function getDataLine($fieldNames);
}